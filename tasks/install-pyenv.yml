---

- when: pyenv_root is undefined
  block:
    - name: Get pyenv_user home
      become: yes
      getent:
        database: passwd
        key: "{{ pyenv_user }}"
        split: ":"

    - name: Set pyenv user home
      set_fact:
        pyenv_user_home: "{{ getent_passwd[pyenv_user][4] }}"

    - name: Set pyenv user shell
      set_fact:
        pyenv_user_shell: "{{ getent_passwd[pyenv_user][5] }}"
      when: pyenv_user != "root"

    - name: Set pyenv_root
      set_fact:
        pyenv_root: "{% if pyenv_user == 'root' %}/usr/local/{% else %}{{ pyenv_user_home }}{% endif %}/{{ pyenv_root_suffix }}"

- name: Set pyenv user shell for root
  set_fact:
    pyenv_user_shell: "system"
  when: pyenv_user == "root"

- name: Install pyenv
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "{{ pyenv_root }}"
    update: "{{ pyenv_update_git_install }}"
    version: "master"

- name: Install pyenv-virtualenv plugin
  git:
    repo: https://github.com/pyenv/pyenv-virtualenv.git
    dest: "{{ pyenv_root }}/plugins/pyenv-virtualenv"
    update: "{{ pyenv_update_git_install }}"
    version: "master"
  when: pyenv_virtualenv_plugin | default(true)

- name: Install xxenv-latest plugin
  git:
    repo: https://github.com/momo-lab/xxenv-latest.git
    dest: "{{ pyenv_root }}/plugins/xxenv-latest"
    update: "{{ pyenv_update_git_install }}"
    version: "master"
  when: xxenv_latest_plugin | default(true)

- name: Install pyenv-update plugin
  git:
    repo: https://github.com/pyenv/pyenv-update.git
    dest: "{{ pyenv_root }}/plugins/pyenv-update"
    update: "{{ pyenv_update_git_install }}"
    version: "master"
  when: pyenv_update_plugin

- name: Install pyenv runtime config
  template:
    src: "pyenvrc.j2"
    dest: "{{ pyenv_root }}/pyenvrc"
    owner: "{{ pyenv_user }}"
    mode: "0644"

- when: pyenv_enable_rc
  block:
    - name: Set shell RC file
      set_fact:
        pyenv_shell_rc: "{{ item.name }}"
      when:
        - pyenv_user_shell is search(item.shell)
        - not pyenv_shell_rc
      with_items:
        - name: "/etc/profile.d/pyenv.sh"
          shell: "system"
        - name: "{{ pyenv_user_home }}/.bashrc"
          shell: "bash"
        - name: "{{ pyenv_user_home }}/.zshrc"
          shell: "zsh"

    - name: Enable pyenvrc at shell start
      lineinfile:
        dest: "{{ pyenv_shell_rc }}"
        regexp: "/pyenvrc$"
        line: "source {{ pyenv_root }}/pyenvrc"
        create: true
        state: present
        mode: "0644"
      when:
        - pyenv_shell_rc is defined

- name: Install python interpreters
  shell: |
    source {{ pyenv_root }}/pyenvrc
    env PYTHON_CONFIGURE_OPTS="{{ pyenv_python_configure_opts }}" pyenv install {{ item }}
  args:
    creates: "{{ pyenv_root }}/versions/{{ item }}/bin/python"
    executable: /bin/bash
  with_items: "{{ pyenv_python_versions }}"
  when: pyenv_python_versions is defined

- name: Create virtual environments
  shell: |
    source {{ pyenv_root }}/pyenvrc
    pyenv virtualenv {{ item.py_version }} {{ item.venv_name }}
  args:
    creates: "{{ pyenv_root }}/versions/{{ item.venv_name }}/bin/python"
    executable: /bin/bash
  with_items: "{{ pyenv_virtualenvs }}"
  when: pyenv_virtualenvs is defined

- name: Set global python version
  template:
    src: version.j2
    dest: "{{ pyenv_root }}/version"
    owner: "{{ pyenv_user }}"
    mode: "0644"
  when: pyenv_default_python_version is defined
